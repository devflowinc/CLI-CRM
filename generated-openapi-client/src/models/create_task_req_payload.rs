/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateTaskReqPayload {
    #[serde(rename = "contact_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub contact_id: Option<Option<String>>,
    #[serde(rename = "deadline", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub deadline: Option<Option<String>>,
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
}

impl CreateTaskReqPayload {
    pub fn new() -> CreateTaskReqPayload {
        CreateTaskReqPayload {
            contact_id: None,
            deadline: None,
            description: None,
        }
    }
}

